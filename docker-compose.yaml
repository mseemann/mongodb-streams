version: '3.7'
services:
  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo:4
    ports:
      - "27017:27017"
    restart: always
    command: ["-f", "/etc/mongo/mongo.conf"]
    volumes:
      - mongo1:/data/db
      - ./config/mongo/etc:/etc/mongo
  mongo2:
    hostname: mongo2
    container_name: localmongo2
    image: mongo:4
    expose:
      - 27017
    restart: always
    command: ["-f", "/etc/mongo/mongo.conf"]
    volumes:
      - mongo2:/data/db
      - ./config/mongo/etc:/etc/mongo
  mongo3:
    hostname: mongo3
    container_name: localmongo3
    image: mongo:4
    expose:
      - 27017
    restart: always
    command: ["-f", "/etc/mongo/mongo.conf"]
    volumes:
      - mongo3:/data/db
      - ./config/mongo/etc:/etc/mongo
  mongosetup:
    image: mongo:4
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./config/mongo/scripts:/scripts
    restart: "no"
    entrypoint: [ "bash", "/scripts/mongo_setup.sh"]
  database:
    image: postgres:13
    ports:
      - "5432:5432"
    env_file:
      - ./config/postgres/db.env
    volumes:
      - postgres:/var/lib/postgresql/data/
      - ./config/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
  prometheus:
    image: prom/prometheus:v2.29.2
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus:/etc/prometheus:ro
  grafana:
    image: grafana/grafana:8.1.2
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=Main Org.
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro

volumes:
  postgres:
  mongo1:
  mongo2:
  mongo3: